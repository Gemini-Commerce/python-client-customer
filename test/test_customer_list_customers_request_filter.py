# coding: utf-8

"""
    CDP Service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Contact: info@gemini-commerce.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from customer.models.customer_list_customers_request_filter import CustomerListCustomersRequestFilter

class TestCustomerListCustomersRequestFilter(unittest.TestCase):
    """CustomerListCustomersRequestFilter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomerListCustomersRequestFilter:
        """Test CustomerListCustomersRequestFilter
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomerListCustomersRequestFilter`
        """
        model = CustomerListCustomersRequestFilter()
        if include_optional:
            return CustomerListCustomersRequestFilter(
                genders = [
                    ''
                    ],
                created_at = [
                    customer.models.list_customers_request_filter_date.ListCustomersRequestFilterDate(
                        from = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                countries = [
                    ''
                    ],
                agent_grn = ''
            )
        else:
            return CustomerListCustomersRequestFilter(
        )
        """

    def testCustomerListCustomersRequestFilter(self):
        """Test CustomerListCustomersRequestFilter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
